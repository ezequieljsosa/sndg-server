package ar.com.bia.dto.jstree;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize.Inclusion;

import java.util.HashMap;
import java.util.Map;

/**
 * http://www.jstree.com/docs/json/
 // Expected format of the node (there are no required fields)
{
  id          : "string" // will be autogenerated if omitted
  text        : "string" // node text
  icon        : "string" // string for custom
  state       : {
    opened    : boolean  // is the node open
    disabled  : boolean  // is the node disabled
    selected  : boolean  // is the node selected
  },
  children    : []  // array of strings or objects
  li_attr     : {}  // attributes for the generated LI node
  a_attr      : {}  // attributes for the generated A node
}
 */
@JsonSerialize(include = Inclusion.NON_EMPTY)
public abstract class JSTreeNodeAbstract  {
	private String id;
	private String text;
	private String type;
	private Map<String,String> state;	
	private Map<String,String> li_attr;
	private Map<String,String> a_attr;
	private String parent;

	
	
	public JSTreeNodeAbstract() {
		super();
		this.state = new HashMap<String,String>();
	}
	
	public String getId() {
		return id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public String getText() {
		return text;
	}
	public void setText(String text) {
		this.text = text;
	}

	public Map<String, String> getState() {
		return state;
	}
	public void setState(Map<String, String> state) {
		this.state = state;
	}
	
	public Map<String, String> getLi_attr() {
		return li_attr;
	}
	public void setLi_attr(Map<String, String> li_attr) {
		this.li_attr = li_attr;
	}
	public Map<String, String> getA_attr() {
		return a_attr;
	}
	public void setA_attr(Map<String, String> a_attr) {
		this.a_attr = a_attr;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getParent() {
		return parent;
	}

	public void setParent(String parent) {
		this.parent = parent;
	}

	
	
	
	
}
